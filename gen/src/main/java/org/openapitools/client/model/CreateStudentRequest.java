/*
 * B-VSA Semestrálny Projekt 2
 * Špecifikácia REST webových služieb slúžia pre detailný opis požadovanej funkcionality pre Semestrálny Projekt 2  v rámci predmetu B-VSA akademický rok 2022/2023.  Pre dopyty na väčšinu služieb (okrem createStudent a createTeacher) je potrebné byť prihlásený. Služby pracujú s Basic autentifikáciou. Každý študent a učiteľ je používateľ systému, ktorý sa môže prihlásiť. Niektoré služby vyžadujú autorizáciu/oprávnenie pre ich dopyt. Služba, ktorá je obmedzená oprávneniami, to má uvedené v popise služby.  Ak služba má vrátiť jeden objekt a nie je nájdený namiesto hodnoty null vráti odpoveď 404. V prípade nečakanej chyby má byť odpoveď s kódom 500 a v správe dôvod vzniku chyby (správa zo vzniknutej Exception). 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Objekt študenta pre vytvorenie nového študenta.
 */
@ApiModel(description = "Objekt študenta pre vytvorenie nového študenta.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-28T15:59:09.730931+02:00[Europe/Bratislava]")
public class CreateStudentRequest {
  public static final String SERIALIZED_NAME_AIS_ID = "aisId";
  @SerializedName(SERIALIZED_NAME_AIS_ID)
  private Long aisId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private Integer year;

  public static final String SERIALIZED_NAME_TERM = "term";
  @SerializedName(SERIALIZED_NAME_TERM)
  private Integer term;

  public static final String SERIALIZED_NAME_PROGRAMME = "programme";
  @SerializedName(SERIALIZED_NAME_PROGRAMME)
  private String programme;


  public CreateStudentRequest aisId(Long aisId) {
    
    this.aisId = aisId;
    return this;
  }

   /**
   * AIS ID študenta. Musí byť unikátne v rámci všetkých študentov.
   * @return aisId
  **/
  @ApiModelProperty(required = true, value = "AIS ID študenta. Musí byť unikátne v rámci všetkých študentov.")

  public Long getAisId() {
    return aisId;
  }


  public void setAisId(Long aisId) {
    this.aisId = aisId;
  }


  public CreateStudentRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateStudentRequest email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(required = true, value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public CreateStudentRequest password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Heslo pre prihlásenie študenta. Heslo musí byť zaslané enkódované v BASE64.
   * @return password
  **/
  @ApiModelProperty(required = true, value = "Heslo pre prihlásenie študenta. Heslo musí byť zaslané enkódované v BASE64.")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public CreateStudentRequest year(Integer year) {
    
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getYear() {
    return year;
  }


  public void setYear(Integer year) {
    this.year = year;
  }


  public CreateStudentRequest term(Integer term) {
    
    this.term = term;
    return this;
  }

   /**
   * Get term
   * @return term
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTerm() {
    return term;
  }


  public void setTerm(Integer term) {
    this.term = term;
  }


  public CreateStudentRequest programme(String programme) {
    
    this.programme = programme;
    return this;
  }

   /**
   * Get programme
   * @return programme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProgramme() {
    return programme;
  }


  public void setProgramme(String programme) {
    this.programme = programme;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateStudentRequest createStudentRequest = (CreateStudentRequest) o;
    return Objects.equals(this.aisId, createStudentRequest.aisId) &&
        Objects.equals(this.name, createStudentRequest.name) &&
        Objects.equals(this.email, createStudentRequest.email) &&
        Objects.equals(this.password, createStudentRequest.password) &&
        Objects.equals(this.year, createStudentRequest.year) &&
        Objects.equals(this.term, createStudentRequest.term) &&
        Objects.equals(this.programme, createStudentRequest.programme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aisId, name, email, password, year, term, programme);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateStudentRequest {\n");
    sb.append("    aisId: ").append(toIndentedString(aisId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    term: ").append(toIndentedString(term)).append("\n");
    sb.append("    programme: ").append(toIndentedString(programme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

