/*
 * B-VSA Semestrálny Projekt 2
 * Špecifikácia REST webových služieb slúžia pre detailný opis požadovanej funkcionality pre Semestrálny Projekt 2  v rámci predmetu B-VSA akademický rok 2022/2023.  Pre dopyty na väčšinu služieb (okrem createStudent a createTeacher) je potrebné byť prihlásený. Služby pracujú s Basic autentifikáciou. Každý študent a učiteľ je používateľ systému, ktorý sa môže prihlásiť. Niektoré služby vyžadujú autorizáciu/oprávnenie pre ich dopyt. Služba, ktorá je obmedzená oprávneniami, to má uvedené v popise služby.  Ak služba má vrátiť jeden objekt a nie je nájdený namiesto hodnoty null vráti odpoveď 404. V prípade nečakanej chyby má byť odpoveď s kódom 500 a v správe dôvod vzniku chyby (správa zo vzniknutej Exception). 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AnyOfobjectobject;
import org.openapitools.client.model.CreateThesisRequest;
import org.openapitools.client.model.InlineObject;
import org.openapitools.client.model.InlineObject1;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Thesis;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThesisApi
 */
@Ignore
public class ThesisApiTest {

    private final ThesisApi api = new ThesisApi();

    
    /**
     * Assign a thesis by id to a student
     *
     * Priradenie záverečnej práce podľa identifikátora študentovi. Ak je prihlásený študent v dopyte je práca priradená jemu. Ak je prihlásený učiteľ je práca priradená študentovi podľa identifikátora v objekte tele dopytu. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void assignThesisTest() throws ApiException {
        Long id = null;
        InlineObject inlineObject = null;
        Thesis response = api.assignThesis(id, inlineObject);

        // TODO: test validations
    }
    
    /**
     * Create new thesis
     *
     * Vytvorenie záverečnej práce. Vytvoriť záverečnú prácu môže iba učiteľ.  Vytvorená záverečná práca je vytvorená pod prihláseným učiteľom. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createThesisTest() throws ApiException {
        Thesis thesis = null;
        CreateThesisRequest response = api.createThesis(thesis);

        // TODO: test validations
    }
    
    /**
     * Delete a thesis by id
     *
     * Vymazanie záverečnej práce podľa identifikátora. Vymazať prácu môže iba prihlásený učiteľ, ktorý prácu vypísal. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteThesisTest() throws ApiException {
        Long id = null;
        Thesis response = api.deleteThesis(id);

        // TODO: test validations
    }
    
    /**
     * Get all theses
     *
     * Získanie zoznamu záverečných prác.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllThesesTest() throws ApiException {
        List<Thesis> response = api.getAllTheses();

        // TODO: test validations
    }
    
    /**
     * Get a thesis by id
     *
     * Získanie záverečnej práce podľa identifikátora.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getThesisTest() throws ApiException {
        Long id = null;
        Thesis response = api.getThesis(id);

        // TODO: test validations
    }
    
    /**
     * Search theses by a teacher or a student
     *
     * Vyhľadanie záverečnej práce na základe kritérií tela dopytu.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchThesesTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        List<Thesis> response = api.searchTheses(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Submit a thesis by id assigned to a student
     *
     * Odovzdanie záverečnej práce podľa identifikátora. Ak je prihlásený študent v dopyte musí sa zhodovať so študentom priradeného k práci. Ak je prihlásený učiteľ je práca odovzdaná študentom podľa identifikátora v objekte tele dopytu, ktorý sa musí zhodovať so študentom priradeného k prác. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitThesisTest() throws ApiException {
        Long id = null;
        InlineObject1 inlineObject1 = null;
        Thesis response = api.submitThesis(id, inlineObject1);

        // TODO: test validations
    }
    
}
